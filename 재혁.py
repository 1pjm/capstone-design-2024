권장_섭취량 = {
    '남성': {
        '1-2': {
            '에너지(kcal)': 900,
            '단백질(g)': 25,
            '탄수화물(g)':130,
            '식이섬유(g)':15,
            '비타민 A(μg RAE)':250,
            '비타민 C(mg)':40,
            '비타민 B12(μg)':0.9,
            '비타민 D(μg)':5,
            '니아신(mg)':6,
            '칼슘(mg)':500,
            '나트륨(mg)':810,
            '철(mg)':6,
            '아연(mg)':3,
            '마그네슘(mg)':70,
            '인(mg)':450,
            '수분(g)':1000
        },

        '3-5': {
            '에너지(kcal)': 1400,
            '단백질(g)': 25,
            '탄수화물(g)':130,
            '식이섬유(g)':20,
            '비타민 A(μg RAE)':300,
            '비타민 C(mg)':45,
            '비타민 B12(μg)':1.1,
            '비타민 D(μg)':5,
            '니아신(mg)':7,
            '칼슘(mg)':600,
            '나트륨(mg)':1000,
            '철(mg)':7,
            '아연(mg)':4,
            '마그네슘(mg)':110,
            '인(mg)':550,
            '수분(g)':1500
        },
        '6-8':{
            '에너지(kcal)': 1700,
            '단백질(g)': 35,
            '탄수화물(g)':130,
            '식이섬유(g)':25,
            '비타민 A(μg RAE)':450,
            '비타민 C(mg)':50,
            '비타민 B12(μg)':1.3,
            '비타민 D(μg)':5,
            '니아신(mg)':9,
            '칼슘(mg)':700,
            '나트륨(mg)':1200,
            '철(mg)':9,
            '아연(mg)':5,
            '마그네슘(mg)':150,
            '인(mg)':600,
            '수분(g)':1700
        },
        '9-11':{
            '에너지(kcal)': 2000,
            '단백질(g)': 50,
            '탄수화물(g)':130,
            '식이섬유(g)':25,
            '비타민 A(μg RAE)':600,
            '비타민 C(mg)':70,
            '비타민 B12(μg)':1.7,
            '비타민 D(μg)':5,
            '니아신(mg)':11,
            '칼슘(mg)':800,
            '나트륨(mg)':1500,
            '철(mg)':11,
            '아연(mg)':8,
            '마그네슘(mg)':220,
            '인(mg)':1200,
            '수분(g)':2000
        },
        '12-14':{
            '에너지(kcal)': 2500,
            '단백질(g)': 60,
            '탄수화물(g)':130,
            '식이섬유(g)':30,
            '비타민 A(μg RAE)':750,
            '비타민 C(mg)':90,
            '비타민 B12(μg)':2.3,
            '비타민 D(μg)':10,
            '니아신(mg)':15,
            '칼슘(mg)':1000,
            '나트륨(mg)':1500,
            '철(mg)':14,
            '아연(mg)':8,
            '마그네슘(mg)':320,
            '인(mg)':1200,
            '수분(g)':2400
        },
        '15-18':{
            '에너지(kcal)': 2700,
            '단백질(g)': 65,
            '탄수화물(g)':130,
            '식이섬유(g)':30,
            '비타민 A(μg RAE)':850,
            '비타민 C(mg)':100,
            '비타민 B12(μg)':2.4,
            '비타민 D(μg)':10,
            '니아신(mg)':17,
            '칼슘(mg)':900,
            '나트륨(mg)':1500,
            '철(mg)':14,
            '아연(mg)':10,
            '마그네슘(mg)':410,
            '인(mg)':1200,
            '수분(g)':2600
        },
        '19-29':{
            '에너지(kcal)': 2600,
            '단백질(g)': 65,
            '탄수화물(g)':130,
            '식이섬유(g)':30,
            '비타민 A(μg RAE)':800,
            '비타민 C(mg)':100,
            '비타민 B12(μg)':2.4,
            '비타민 D(μg)':10,
            '니아신(mg)':16,
            '칼슘(mg)':800,
            '나트륨(mg)':1500,
            '철(mg)':10,
            '아연(mg)':10,
            '마그네슘(mg)':360,
            '인(mg)':700,
            '수분(g)':2600
        },
        '30-49':{
            '에너지(kcal)': 2500,
            '단백질(g)': 65,
            '탄수화물(g)':130,
            '식이섬유(g)':20,
            '비타민 A(μg RAE)':800,
            '비타민 C(mg)':100,
            '비타민 B12(μg)':2.4,
            '비타민 D(μg)':10,
            '니아신(mg)':16,
            '칼슘(mg)':800,
            '나트륨(mg)':1500,
            '철(mg)':10,
            '아연(mg)':10,
            '마그네슘(mg)':370,
            '인(mg)':700,
            '수분(g)':2500
        },
        '50-64':{
            '에너지(kcal)': 2200,
            '단백질(g)': 60,
            '탄수화물(g)':130,
            '식이섬유(g)':30,
            '비타민 A(μg RAE)':750,
            '비타민 C(mg)':100,
            '비타민 B12(μg)':2.4,
            '비타민 D(μg)':10,
            '니아신(mg)':16,
            '칼슘(mg)':750,
            '나트륨(mg)':1500,
            '철(mg)':10,
            '아연(mg)':10,
            '마그네슘(mg)':370,
            '인(mg)':700,
            '수분(g)':2200
        },
        '65-74':{
            '에너지(kcal)': 2000,
            '단백질(g)': 60,
            '탄수화물(g)':130,
            '식이섬유(g)':25,
            '비타민 A(μg RAE)':700,
            '비타민 C(mg)':100,
            '비타민 B12(μg)':2.4,
            '비타민 D(μg)':15,
            '니아신(mg)':14,
            '칼슘(mg)':700,
            '나트륨(mg)':1300,
            '철(mg)':9,
            '아연(mg)':9,
            '마그네슘(mg)':370,
            '인(mg)':700,
            '수분(g)':2100
        },
        '75':{
            '에너지(kcal)': 1900,
            '단백질(g)': 60,
            '탄수화물(g)':130,
            '식이섬유(g)':25,
            '비타민 A(μg RAE)':700,
            '비타민 C(mg)':100,
            '비타민 B12(μg)':2.4,
            '비타민 D(μg)':15,
            '니아신(mg)':13,
            '칼슘(mg)':700,
            '나트륨(mg)':1100,
            '철(mg)':9,
            '아연(mg)':9,
            '마그네슘(mg)':370,
            '인(mg)':700,
            '수분(g)':2100
        }
    },
    '여성': {
        '1-2': {
            '에너지(kcal)': 900,
            '단백질(g)': 20,
            '탄수화물(g)':130,
            '식이섬유(g)':15,
            '비타민 A(μg RAE)':250,
            '비타민 C(mg)':40,
            '비타민 B12(μg)':0.9,
            '비타민 D(μg)':5,
            '니아신(mg)':6,
            '칼슘(mg)':500,
            '나트륨(mg)':810,
            '철(mg)':6,
            '아연(mg)':3,
            '마그네슘(mg)':70,
            '인(mg)':450,
            '수분(g)':1000
        },

        '3-5': {
            '에너지(kcal)': 1400,
            '단백질(g)': 25,
            '탄수화물(g)':130,
            '식이섬유(g)':20,
            '비타민 A(μg RAE)':300,
            '비타민 C(mg)':45,
            '비타민 B12(μg)':1.1,
            '비타민 D(μg)':5,
            '니아신(mg)':7,
            '칼슘(mg)':600,
            '나트륨(mg)':1000,
            '철(mg)':7,
            '아연(mg)':4,
            '마그네슘(mg)':110,
            '인(mg)':550,
            '수분(g)':1500
        },
        '6-8':{
            '에너지(kcal)': 1500,
            '단백질(g)': 35,
            '탄수화물(g)':130,
            '식이섬유(g)':20,
            '비타민 A(μg RAE)':400,
            '비타민 C(mg)':50,
            '비타민 B12(μg)':1.3,
            '비타민 D(μg)':5,
            '니아신(mg)':9,
            '칼슘(mg)':700,
            '나트륨(mg)':1200,
            '철(mg)':9,
            '아연(mg)':5,
            '마그네슘(mg)':150,
            '인(mg)':550,
            '수분(g)':1600
        },
        '9-11':{
            '에너지(kcal)': 1800,
            '단백질(g)': 45,
            '탄수화물(g)':130,
            '식이섬유(g)':25,
            '비타민 A(μg RAE)':550,
            '비타민 C(mg)':70,
            '비타민 B12(μg)':1.7,
            '비타민 D(μg)':5,
            '니아신(mg)':12,
            '칼슘(mg)':800,
            '나트륨(mg)':1500,
            '철(mg)':10,
            '아연(mg)':8,
            '마그네슘(mg)':220,
            '인(mg)':1200,
            '수분(g)':1900
        },
        '12-14':{
            '에너지(kcal)': 2000,
            '단백질(g)': 55,
            '탄수화물(g)':130,
            '식이섬유(g)':25,
            '비타민 A(μg RAE)':650,
            '비타민 C(mg)':90,
            '비타민 B12(μg)':2.3,
            '비타민 D(μg)':10,
            '니아신(mg)':15,
            '칼슘(mg)':900,
            '나트륨(mg)':1500,
            '철(mg)':16,
            '아연(mg)':8,
            '마그네슘(mg)':290,
            '인(mg)':1200,
            '수분(g)':2000
        },
        '15-18':{
            '에너지(kcal)': 2000,
            '단백질(g)': 55,
            '탄수화물(g)':130,
            '식이섬유(g)':25,
            '비타민 A(μg RAE)':650,
            '비타민 C(mg)':100,
            '비타민 B12(μg)':2.4,
            '비타민 D(μg)':10,
            '니아신(mg)':14,
            '칼슘(mg)':800,
            '나트륨(mg)':1500,
            '철(mg)':14,
            '아연(mg)':9,
            '마그네슘(mg)':340,
            '인(mg)':1200,
            '수분(g)':2000
        },
        '19-29':{
            '에너지(kcal)': 2000,
            '단백질(g)': 55,
            '탄수화물(g)':130,
            '식이섬유(g)':20,
            '비타민 A(μg RAE)':650,
            '비타민 C(mg)':100,
            '비타민 B12(μg)':2.4,
            '비타민 D(μg)':10,
            '니아신(mg)':14,
            '칼슘(mg)':700,
            '나트륨(mg)':1500,
            '철(mg)':14,
            '아연(mg)':8,
            '마그네슘(mg)':280,
            '인(mg)':700,
            '수분(g)':2100
        },
        '30-49':{
            '에너지(kcal)': 1900,
            '단백질(g)': 50,
            '탄수화물(g)':130,
            '식이섬유(g)':20,
            '비타민 A(μg RAE)':650,
            '비타민 C(mg)':100,
            '비타민 B12(μg)':2.4,
            '비타민 D(μg)':10,
            '니아신(mg)':14,
            '칼슘(mg)':700,
            '나트륨(mg)':1500,
            '철(mg)':14,
            '아연(mg)':18,
            '마그네슘(mg)':280,
            '인(mg)':700,
            '수분(g)':2000
        },
        '50-64':{
            '에너지(kcal)': 1700,
            '단백질(g)': 50,
            '탄수화물(g)':130,
            '식이섬유(g)':20,
            '비타민 A(μg RAE)':600,
            '비타민 C(mg)':100,
            '비타민 B12(μg)':2.4,
            '비타민 D(μg)':10,
            '니아신(mg)':14,
            '칼슘(mg)':800,
            '나트륨(mg)':1500,
            '철(mg)':8,
            '아연(mg)':8,
            '마그네슘(mg)':280,
            '인(mg)':700,
            '수분(g)':1900
        },
        '65-74':{
            '에너지(kcal)': 1600,
            '단백질(g)': 50,
            '탄수화물(g)':130,
            '식이섬유(g)':20,
            '비타민 A(μg RAE)':600,
            '비타민 C(mg)':100,
            '비타민 B12(μg)':2.4,
            '비타민 D(μg)':15,
            '니아신(mg)':13,
            '칼슘(mg)':800,
            '나트륨(mg)':1300,
            '철(mg)':8,
            '아연(mg)':7,
            '마그네슘(mg)':280,
            '인(mg)':700,
            '수분(g)':1800
        },
        '75':{
            '에너지(kcal)': 1500,
            '단백질(g)': 50,
            '탄수화물(g)':130,
            '식이섬유(g)':20,
            '비타민 A(μg RAE)':600,
            '비타민 C(mg)':100,
            '비타민 B12(μg)':2.4,
            '비타민 D(μg)':15,
            '니아신(mg)':12,
            '칼슘(mg)':800,
            '나트륨(mg)':1100,
            '철(mg)':7,
            '아연(mg)':7,
            '마그네슘(mg)':280,
            '인(mg)':700,
            '수분(g)':1800
        }
    }
}
영양제_매핑 = {
        '에너지(kcal)': '고칼로리 보충제',
        '수분(g)': '전해질 보충 파우더',
        '단백질(g)': '단백질 보충제',
        '지방(g)': '오메가 3 보충제',
        '탄수화물(g)': '복합 탄수화물 보충제',
        '당류(g)': '글루코스 보충제',
        '식이섬유(g)': '식이섬유 보충제',
        '칼슘(mg)': '칼슘 보충제',
        '철(mg)': '철분 보충제',
        '인(mg)': '인 보충제',
        '칼륨(mg)': '칼륨 보충제',
        '나트륨(mg)': '소금(제한적으로)',
        '비타민 A(μg RAE)': '비타민 A 보충제',
        '니아신(mg)': '니아신 보충제',
        '비타민 C(mg)': '비타민 C 보충제',
        '비타민 D(μg)': '비타민 D 보충제',
        '콜레스테롤(mg)': '콜레스테롤 관리 보충제',
        '마그네슘(mg)': '마그네슘 보충제',
        '아연(mg)': '아연 보충제',
        '구리(mg)': '구리 보충제',
        '비타민 B12(μg)': '비타민 B12 보충제'
    }
def 영양소_분석_및_추천(나이, 성별, 몸무게, 질병명, PA지수, 키):
    if 나이 < 0 or 나이 > 100:
        return "입력한 나이가 유효한 범위를 벗어났습니다. 나이는 0세 이상 100세 이하로 입력해주세요."
    
    if 성별 != "남성" and 성별 != "여성":
        return "성별 입력이 올바르지 않습니다. '남성' 또는 '여성'으로 입력해주세요.", []
    
    if 성별 == "여성":
        if PA지수 == 1:
            PA계수 = 1.0
        elif PA지수 == 2:
            PA계수 = 1.12
        elif PA지수 == 3:
            PA계수 = 1.27
        elif PA지수 == 4:
            PA계수 = 1.45
    elif 성별 == "남성":
        if PA지수 == 1:
            PA계수 = 1.0
        elif PA지수 == 2:
            PA계수 = 1.11
        elif PA지수 == 3:
            PA계수 = 1.25
        elif PA지수 == 4:
            PA계수 = 1.48
    신장_m = 키 / 100
        
    # 권장 칼로리 계산 로직 업데이트
    if 나이 <= 2:
        권장_칼로리 = 89 * 몸무게 - 100
    elif 나이 <= 19:
        if 성별 == "남성":
            권장_칼로리 = 88.5 - 61.9 * 나이 + PA계수 * (26.7 * 몸무게 + 903 * 신장_m)
        else:  # 여성
            권장_칼로리 = 135.3 - 30.8 * 나이 + PA계수 * (10.0 * 몸무게 + 934 * 신장_m)
    else:
        if 성별 == "남성":
            권장_칼로리 = 662 - 9.53 * 나이 + PA계수 * (15.91 * 몸무게 + 539.6 * 신장_m)
        else:  # 여성
            권장_칼로리 = 354 - 6.91 * 나이 + PA계수 * (9.36 * 몸무게 + 726 * 신장_m)
    print(f"나이: {나이}, 성별: {성별}, 몸무게: {몸무게}kg, 키: {키}cm, PA지수: {PA지수}에 따른 권장 칼로리는 {권장_칼로리:.2f}㎉ 입니다.")    
    
    # 권장 단백질 계산
    if 성별 == "여성":
        권장_단백질 = 신장_m * 신장_m * 21
    else:  # 남성
        권장_단백질 = 신장_m * 신장_m * 22
    
    # 권장 단백질 출력
    print(f"권장 단백질 섭취량: {권장_단백질:.2f}g")
    
    
    # 영양소별 분석 및 추천
    분석_결과 = {}
    추천_영양제 = []
    
    
    # 기본 권장 섭취량
    BMI = 몸무게 / (키/100)**2

    if BMI > 24.9:
        분석_결과['BMI'] = '비만'
    else:
        분석_결과['BMI'] = '정상'

    if 분석_결과['BMI'] == '비만':
        print(f"BMI분석 결과 {BMI:.2f}이므로 당신은 비만입니다.")  # f-string을 사용하여 BMI 변수를 문자열에 포함
    else:
        print(f"BMI분석 결과 {BMI:.2f}이므로 당신은 정상입니다.")  # f-string을 사용하여 BMI 변수를 문자열에 포함
    
    if "고혈압" in 질병명:
        추천_영양제.extend(["오메가-3", "마그네슘", "칼륨", "코엔자임 Q10"])
    elif "당뇨병" in 질병명:
        추천_영양제.extend(["크롬", "마그네슘", "오메가-3"])
    elif "위암" in 질병명:
        추천_영양제.extend(["비타민C", "비타민D", "셀레늄", "오메가-3", "프로바이오틱스", "아연"])
    elif "대장암" in 질병명:
        추천_영양제.extend(["섬유질", "셀레늄", "비타민C", "비타민D", "오메가-3", "칼슘"])
    elif "고지혈증" in 질병명:
        추천_영양제.extend(["오메가-3", "지방산", "식물 스테롤과 스타놀", "나이아신 (비타민 B3)", "폴리페놀", "코엔자임 Q10"])  
    elif  "골다공증" in 질병명:
        추천_영양제.extend(["칼슘", "비타민D", "마그네슘", "비타민K", "오메가-3", "아연"])
    return 분석_결과, 추천_영양제    

# 사용자 입력
나이 = int(input("나이를 입력하세요: "))
성별 = input("성별을 입력하세요 (남성/여성): ")
몸무게 = float(input("몸무게(kg)를 입력하세요: "))  # 몸무게 입력 부분 완성
키 = float(input("키(cm)를 입력하세요: "))
PA지수 = int(input("활동 수준을 입력하세요 (1: 낮음, 2: 보통, 3: 높음, 4: 매우 높음): "))
질병명 = input("질병명을 입력하세요 (없음 또는 질병명): ")  # 질병명 입력 추가

# 영양소 분석 및 추천 함수 호출
분석_결과, 추천_영양제 = 영양소_분석_및_추천(나이, 성별, 몸무게, 질병명, PA지수, 키)

print("분석 결과:", 분석_결과)
print("추천 영양제:", 추천_영양제)

import os
import pandas as pd

# 현재 작업 디렉토리 확인
print("현재 작업 디렉토리:", os.getcwd())

# 파일 절대 경로 사용
파일_절대_경로 = '/Users/whoru/new/식품영양성분DB_음식_20240513.xlsx'

import pandas as pd

def 엑셀에서_음식_정보_읽기(파일명):
    df = pd.read_excel(파일명)
    음식_정보 = {
        row['식품명']: {
            '에너지(kcal)': row['에너지(kcal)'],
            '수분(g)': row['수분(g)'],
            '단백질(g)': row['단백질(g)'],
            '지방(g)': row['지방(g)'],
            '탄수화물(g)': row['탄수화물(g)'],
            '당류(g)': row['당류(g)'],
            '식이섬유(g)': row['식이섬유(g)'],
            '칼슘(mg)': row['칼슘(mg)'],
            '철(mg)': row['철(mg)'],
            '인(mg)': row['인(mg)'],
            '칼륨(mg)': row['칼륨(mg)'],
            '나트륨(mg)': row['나트륨(mg)'],
            '비타민 A(μg RAE)': row['비타민 A(μg RAE)'],
            '니아신(mg)': row['니아신(mg)'],
            '비타민 C(mg)': row['비타민 C(mg)'],
            '비타민 D(μg)': row['비타민 D(μg)'],
            '콜레스테롤(mg)': row['콜레스테롤(mg)'],
            '마그네슘(mg)': row['마그네슘(mg)'],
            '아연(mg)': row['아연(mg)'],
            '구리(mg)': row['구리(mg)'],
            '비타민 B12(μg)': row['비타민 B12(μg)']
        } for 식품명, row in df.iterrows()
    }
    return 음식_정보

# 영양소 분석 및 추천 함수 호출 부분 이전으로 권장 칼로리 계산 로직 이동
# 권장 칼로리 계산 및 출력
분석_결과, 추천_영양제 = 영양소_분석_및_추천(나이, 성별, 몸무게, 질병명, PA지수, 키)  # 칼로리, 단백질, 비타민C는 0으로 임시 설정

# 일주일 치 식단 입력 받기
일주일_식단 = {}  # 일주일 치 식단을 저장할 딕셔너리

요일 = ["월요일", "화요일", "수요일", "목요일", "금요일", "토요일", "일요일"]

for day in 요일:
    음식_입력 = input(f"{day}에 드신 음식을 입력해주세요 (여러 개일 경우 쉼표로 구분): ")
    음식_리스트 = 음식_입력.split(",")  # 쉼표를 기준으로 분리하여 리스트 생성
    일주일_식단[day] = 음식_리스트

# 입력받은 식단 출력
for day, foods in 일주일_식단.items():
    print(f"{day}: {', '.join(foods)}")

# 엑셀 파일로부터 음식 칼로리 데이터베이스 로드
음식_리스트_DB = 엑셀에서_음식_정보_읽기(파일_절대_경로)

def 나이대_결정(나이):
    if 1 <= 나이 <= 2:
        연령대 = '1-2'
    elif 3 <= 나이 <= 5:
        연령대 = '3-5'
    elif 6 <= 나이 <= 8:
        연령대 = '6-8'
    elif 9 <= 나이 <= 11:
        연령대 = '9-11'
    elif 12 <= 나이 <= 14:
        연령대 = '12-14'
    elif 15 <= 나이 <= 18:
        연령대 = '15-18'
    elif 19 <= 나이 <= 29:
        연령대 = '19-29'
    elif 30 <= 나이 <= 49:
        연령대 = '30-49'
    elif 50 <= 나이 <= 64:
        연령대 = '50-64'
    elif 65 <= 나이 <= 74:
        연령대 = '65-74'
    elif 나이 >= 75:
        연령대 = '75'
    else:
        연령대 = None
    return 연령대

def 영양제_추천(부족한_영양소):
    # 영양소와 추천 영양제의 매핑
    추천_영양제 = []
    for 영양소 in 부족한_영양소:
        if 영양소 in 영양제_매핑:
            추천_영양제.append(영양제_매핑[영양소])
    return 추천_영양제

def 음식_영양소_계산_및_분석(음식_리스트, 음식_리스트_DB, 성별, 연령대):
    영양소_합계 = {
        '에너지(kcal)': 0,
        '수분(g)': 0,
        '단백질(g)': 0,
        '지방(g)': 0,
        '탄수화물(g)': 0,
        '당류(g)': 0,
        '식이섬유(g)': 0,
        '칼슘(mg)': 0,
        '철(mg)': 0,
        '인(mg)': 0,
        '칼륨(mg)': 0,
        '나트륨(mg)': 0,
        '비타민 A(μg RAE)': 0,
        '니아신(mg)': 0,
        '비타민 C(mg)': 0,
        '비타민 D(μg)': 0,
        '콜레스테롤(mg)': 0,
        '마그네슘(mg)': 0,
        '아연(mg)': 0,
        '구리(mg)': 0,
        '비타민 B12(μg)': 0
    }
    부족한_영양소 = []
    for day, 음식_리스트 in 일주일_식단.items():
        for 음식 in 음식_리스트:
            음식 = 음식.strip()
            if 음식 in 음식_리스트_DB:
                for 영양소, 값 in 음식_리스트_DB[음식].items():
                    영양소_합계[영양소] += 값
        else:
            print(f"{음식}에 대한 영양소 정보가 없습니다.")
    
    for 영양소, 값 in 영양소_합계.items():
        기준값 = 권장_섭취량[성별][연령대].get(영양소, 0) * 7 # 연령대와 성별에 맞는 기준값 사용
        차이 = 값 - 기준값
        if 차이 < 0:
            부족한_영양소.append(영양소)

     # 영양소 분석 및 출력
    for 영양소, 값 in 영양소_합계.items():
        기준값 = 권장_섭취량[성별][연령대].get(영양소, 0) * 7 # 연령대와 성별에 맞는 기준값 사용
        차이 = 값 - 기준값
        if 영양소 in 부족한_영양소:
            추천 = 영양제_매핑[영양소]  # 해당 영양소에 대한 추천 영양제
            if 차이 == 0:
                상태 = f"적정, 추천 영양제: {추천}"
            elif 차이 < 0:
                상태 = f"부족 ({차이}), 추천 영양제: {추천}"
            else:
                상태 = f"초과 ({차이}), 추천 영양제: {추천}"
        else:
            if 차이 == 0:
                상태 = "적정"
            elif 차이 < 0:
                상태 = f"부족 ({차이})"
            else:
                상태 = f"초과 ({차이})"
        
        print(f"{영양소}: {값:.2f} ({상태})")

연령대 = 나이대_결정(나이)


# 사용자로부터 입력 받은 음식 리스트와 엑셀 파일에서 로드된 음식 영양소 DB를 사용하여 영양소 계산 및 분석
# 음식_리스트_DB = 엑셀에서_음식_정보_읽기(파일_절대_경로)
# 음식_영양소_합계_및_분석 = 음식_영양소_계산_및_분석(음식_리스트, 음식_리스트_DB, 성별, 연령대)
